import { Component, Input, ViewEncapsulation, ElementRef } from '@angular/core';
import { deprecatedSelector } from '../deprecated-selector';
var TreeNodeExpanderComponent = (function () {
    function TreeNodeExpanderComponent(elementRef) {
        this.elementRef = elementRef;
        deprecatedSelector('TreeNodeExpander', 'tree-node-expander', elementRef);
    }
    TreeNodeExpanderComponent.decorators = [
        { type: Component, args: [{
                    selector: 'TreeNodeExpander, tree-node-expander',
                    encapsulation: ViewEncapsulation.None,
                    styles: [
                        '.toggle-children-wrapper-expanded .toggle-children { transform: rotate(0deg) }',
                        '.toggle-children-wrapper-collapsed .toggle-children { transform: rotate(-90deg); }',
                        ".toggle-children-wrapper {\n      padding: 2px 3px 5px 1px;\n    }",
                        /* tslint:disable */
                        ".toggle-children {\n        background-image: url('data:image/svg+xml;utf8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IS0tIEdlbmVyYXRvcjogQWRvYmUgSWxsdXN0cmF0b3IgMTkuMS4wLCBTVkcgRXhwb3J0IFBsdWctSW4gLiBTVkcgVmVyc2lvbjogNi4wMCBCdWlsZCAwKSAgLS0+CjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgdmVyc2lvbj0iMS4xIiBpZD0iQ2FwYV8xIiB4PSIwcHgiIHk9IjBweCIgdmlld0JveD0iMCAwIDQwNS40NTYgNDA1LjQ1NiIgc3R5bGU9ImVuYWJsZS1iYWNrZ3JvdW5kOm5ldyAwIDAgNDA1LjQ1NiA0MDUuNDU2OyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSIgd2lkdGg9IjMycHgiIGhlaWdodD0iMzJweCI+CjxnPgoJPHBhdGggZD0iTTc0LjEzNCw2NC4xNDdjLTQuOTg1LDAuMDc4LTkuOTExLDIuMTYzLTEzLjQzOCw1LjY4OGwtNTUsNTVDMi4wOTYsMTI4LjQzMiwwLDEzMy40OTIsMCwxMzguNTgzICAgczIuMDk2LDEwLjE1MSw1LjY5NywxMy43NWwxODMuMjgxLDE4My4yODFjMy41OTksMy42MDEsOC42NTksNS42OTcsMTMuNzUsNS42OTdzMTAuMTUxLTIuMDk2LDEzLjc1LTUuNjk3bDE4My4yODEtMTgzLjI4MSAgIGMzLjYwMS0zLjU5OSw1LjY5Ny04LjY1OSw1LjY5Ny0xMy43NXMtMi4wOTYtMTAuMTUxLTUuNjk3LTEzLjc1bC01NS01NWMtMy41OTgtMy41OTEtOC42NTEtNS42ODEtMTMuNzM0LTUuNjgxICAgYy01LjA4MywwLTEwLjEzNiwyLjA5LTEzLjczNCw1LjY4MUwyMDIuNzI4LDE4NC4zOTdMODguMTY2LDY5LjgzM0M4NC40OTksNjYuMTY5LDc5LjMxOCw2NC4wNyw3NC4xMzQsNjQuMTQ3TDc0LjEzNCw2NC4xNDd6IiBmaWxsPSIjMDA2REYwIi8+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPC9zdmc+Cg==');\n        height: 10px;\n        width: 11px;\n        background-size: contain;\n        display: inline-block;\n        position: relative;\n        top: 3px;\n        background-repeat: no-repeat;\n        background-position: center;\n    }",
                        /* tslint:enable */
                        ".toggle-children-placeholder {\n        display: inline-block;\n        height: 20px;\n        width: 20px;\n        position: relative;\n        top: 1px;\n        padding-right: 3px;\n    }"
                    ],
                    template: "\n    <ng-container *mobxAutorun>\n      <span\n        *ngIf=\"node.hasChildren\"\n        [class.toggle-children-wrapper-expanded]=\"node.isExpanded\"\n        [class.toggle-children-wrapper-collapsed]=\"node.isCollapsed\"\n        class=\"toggle-children-wrapper\"\n        (click)=\"node.mouseAction('expanderClick', $event)\">\n\n        <span class=\"toggle-children\"></span>\n      </span>\n      <span\n        *ngIf=\"!node.hasChildren\"\n        class=\"toggle-children-placeholder\">\n      </span>\n    </ng-container>\n  "
                },] },
    ];
    /** @nocollapse */
    TreeNodeExpanderComponent.ctorParameters = function () { return [
        { type: ElementRef, },
    ]; };
    TreeNodeExpanderComponent.propDecorators = {
        'node': [{ type: Input },],
    };
    return TreeNodeExpanderComponent;
}());
export { TreeNodeExpanderComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9jb21wb25lbnRzL3RyZWUtbm9kZS1leHBhbmRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQUEsRUFBVyxLQUFBLEVBQU8saUJBQUEsRUFBbUIsVUFBQSxFQUFXLE1BQU8sZUFBQSxDQUFnQjtBQUVoRixPQUFPLEVBQUUsa0JBQUEsRUFBbUIsTUFBTyx3QkFBQSxDQUF5QjtBQUc1RDtJQUdFLG1DQUFvQixVQUFzQjtRQUF0QixlQUFVLEdBQVYsVUFBVSxDQUFZO1FBQ3hDLGtCQUFrQixDQUFDLGtCQUFrQixFQUFFLG9CQUFvQixFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQzNFLENBQUM7SUFDSSxvQ0FBVSxHQUEwQjtRQUMzQyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLENBQUM7b0JBQ3hCLFFBQVEsRUFBRSxzQ0FBc0M7b0JBQ2hELGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO29CQUNyQyxNQUFNLEVBQUU7d0JBQ04saUZBQWlGO3dCQUNqRiwrRUFBK0U7d0JBQy9FLG9FQUVFO3dCQUNGLG9CQUFvQjt3QkFDcEIsNnBEQVVFO3dCQUNGLG1CQUFtQjt3QkFDbkIsaU1BT0U7cUJBQ0g7b0JBQ0QsUUFBUSxFQUFFLHloQkFnQlQ7aUJBQ0YsRUFBRyxFQUFFO0tBQ0wsQ0FBQztJQUNGLGtCQUFrQjtJQUNYLHdDQUFjLEdBQW1FLGNBQU0sT0FBQTtRQUM5RixFQUFDLElBQUksRUFBRSxVQUFVLEdBQUc7S0FDbkIsRUFGNkYsQ0FFN0YsQ0FBQztJQUNLLHdDQUFjLEdBQTJDO1FBQ2hFLE1BQU0sRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFO0tBQ3pCLENBQUM7SUFDRixnQ0FBQztDQWhFRCxBQWdFQyxJQUFBO1NBaEVZLHlCQUF5QiIsImZpbGUiOiJ0cmVlLW5vZGUtZXhwYW5kZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIFZpZXdFbmNhcHN1bGF0aW9uLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUcmVlTm9kZSB9IGZyb20gJy4uL21vZGVscy90cmVlLW5vZGUubW9kZWwnO1xuaW1wb3J0IHsgZGVwcmVjYXRlZFNlbGVjdG9yIH0gZnJvbSAnLi4vZGVwcmVjYXRlZC1zZWxlY3Rvcic7XG5cblxuZXhwb3J0IGNsYXNzIFRyZWVOb2RlRXhwYW5kZXJDb21wb25lbnQge1xuICAgbm9kZTogVHJlZU5vZGU7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7XG4gICAgZGVwcmVjYXRlZFNlbGVjdG9yKCdUcmVlTm9kZUV4cGFuZGVyJywgJ3RyZWUtbm9kZS1leHBhbmRlcicsIGVsZW1lbnRSZWYpO1xuICB9XG5zdGF0aWMgZGVjb3JhdG9yczogRGVjb3JhdG9ySW52b2NhdGlvbltdID0gW1xueyB0eXBlOiBDb21wb25lbnQsIGFyZ3M6IFt7XG4gIHNlbGVjdG9yOiAnVHJlZU5vZGVFeHBhbmRlciwgdHJlZS1ub2RlLWV4cGFuZGVyJyxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgc3R5bGVzOiBbXG4gICAgJy50b2dnbGUtY2hpbGRyZW4td3JhcHBlci1leHBhbmRlZCAudG9nZ2xlLWNoaWxkcmVuIHsgdHJhbnNmb3JtOiByb3RhdGUoOTBkZWcpIH0nLFxuICAgICcudG9nZ2xlLWNoaWxkcmVuLXdyYXBwZXItY29sbGFwc2VkIC50b2dnbGUtY2hpbGRyZW4geyB0cmFuc2Zvcm06IHJvdGF0ZSgwKTsgfScsXG4gICAgYC50b2dnbGUtY2hpbGRyZW4td3JhcHBlciB7XG4gICAgICBwYWRkaW5nOiAycHggM3B4IDVweCAxcHg7XG4gICAgfWAsXG4gICAgLyogdHNsaW50OmRpc2FibGUgKi9cbiAgICBgLnRvZ2dsZS1jaGlsZHJlbiB7XG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcXCdkYXRhOmltYWdlL3N2Zyt4bWw7dXRmODtiYXNlNjQsUEQ5NGJXd2dkbVZ5YzJsdmJqMGlNUzR3SWlCbGJtTnZaR2x1WnowaWFYTnZMVGc0TlRrdE1TSS9QZ284SVMwdElFZGxibVZ5WVhSdmNqb2dRV1J2WW1VZ1NXeHNkWE4wY21GMGIzSWdNVGt1TVM0d0xDQlRWa2NnUlhod2IzSjBJRkJzZFdjdFNXNGdMaUJUVmtjZ1ZtVnljMmx2YmpvZ05pNHdNQ0JDZFdsc1pDQXdLU0FnTFMwK0NqeHpkbWNnZUcxc2JuTTlJbWgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5JaUI0Yld4dWN6cDRiR2x1YXowaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1UazVPUzk0YkdsdWF5SWdkbVZ5YzJsdmJqMGlNUzR4SWlCcFpEMGlRMkZ3WVY4eElpQjRQU0l3Y0hnaUlIazlJakJ3ZUNJZ2RtbGxkMEp2ZUQwaU1DQXdJRFF3TlM0ME5UWWdOREExTGpRMU5pSWdjM1I1YkdVOUltVnVZV0pzWlMxaVlXTnJaM0p2ZFc1a09tNWxkeUF3SURBZ05EQTFMalExTmlBME1EVXVORFUyT3lJZ2VHMXNPbk53WVdObFBTSndjbVZ6WlhKMlpTSWdkMmxrZEdnOUlqTXljSGdpSUdobGFXZG9kRDBpTXpKd2VDSStDanhuUGdvSlBIQmhkR2dnWkQwaVRUYzBMakV6TkN3Mk5DNHhORGRqTFRRdU9UZzFMREF1TURjNExUa3VPVEV4TERJdU1UWXpMVEV6TGpRek9DdzFMalk0T0d3dE5UVXNOVFZETWk0d09UWXNNVEk0TGpRek1pd3dMREV6TXk0ME9USXNNQ3d4TXpndU5UZ3pJQ0FnY3pJdU1EazJMREV3TGpFMU1TdzFMalk1Tnl3eE15NDNOV3d4T0RNdU1qZ3hMREU0TXk0eU9ERmpNeTQxT1Rrc015NDJNREVzT0M0Mk5Ua3NOUzQyT1Rjc01UTXVOelVzTlM0Mk9UZHpNVEF1TVRVeExUSXVNRGsyTERFekxqYzFMVFV1TmprM2JERTRNeTR5T0RFdE1UZ3pMakk0TVNBZ0lHTXpMall3TVMwekxqVTVPU3cxTGpZNU55MDRMalkxT1N3MUxqWTVOeTB4TXk0M05YTXRNaTR3T1RZdE1UQXVNVFV4TFRVdU5qazNMVEV6TGpjMWJDMDFOUzAxTldNdE15NDFPVGd0TXk0MU9URXRPQzQyTlRFdE5TNDJPREV0TVRNdU56TTBMVFV1TmpneElDQWdZeTAxTGpBNE15d3dMVEV3TGpFek5pd3lMakE1TFRFekxqY3pOQ3cxTGpZNE1Vd3lNREl1TnpJNExERTROQzR6T1RkTU9EZ3VNVFkyTERZNUxqZ3pNME00TkM0ME9Ua3NOall1TVRZNUxEYzVMak14T0N3Mk5DNHdOeXczTkM0eE16UXNOalF1TVRRM1REYzBMakV6TkN3Mk5DNHhORGQ2SWlCbWFXeHNQU0lqTURBMlJFWXdJaTgrQ2p3dlp6NEtQR2MrQ2p3dlp6NEtQR2MrQ2p3dlp6NEtQR2MrQ2p3dlp6NEtQR2MrQ2p3dlp6NEtQR2MrQ2p3dlp6NEtQR2MrQ2p3dlp6NEtQR2MrQ2p3dlp6NEtQR2MrQ2p3dlp6NEtQR2MrQ2p3dlp6NEtQR2MrQ2p3dlp6NEtQR2MrQ2p3dlp6NEtQR2MrQ2p3dlp6NEtQR2MrQ2p3dlp6NEtQR2MrQ2p3dlp6NEtQR2MrQ2p3dlp6NEtQQzl6ZG1jK0NnPT1cXCcpO1xuICAgICAgICBoZWlnaHQ6IDhweDtcbiAgICAgICAgd2lkdGg6IDlweDtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgdG9wOiAxcHg7XG4gICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgICB9YCxcbiAgICAvKiB0c2xpbnQ6ZW5hYmxlICovXG4gICAgYC50b2dnbGUtY2hpbGRyZW4tcGxhY2Vob2xkZXIge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIGhlaWdodDogMTBweDtcbiAgICAgICAgd2lkdGg6IDEwcHg7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgdG9wOiAxcHg7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDNweDtcbiAgICB9YFxuICBdLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250YWluZXIgKm1vYnhBdXRvcnVuPlxuICAgICAgPHNwYW5cbiAgICAgICAgKm5nSWY9XCJub2RlLmhhc0NoaWxkcmVuXCJcbiAgICAgICAgW2NsYXNzLnRvZ2dsZS1jaGlsZHJlbi13cmFwcGVyLWV4cGFuZGVkXT1cIm5vZGUuaXNFeHBhbmRlZFwiXG4gICAgICAgIFtjbGFzcy50b2dnbGUtY2hpbGRyZW4td3JhcHBlci1jb2xsYXBzZWRdPVwibm9kZS5pc0NvbGxhcHNlZFwiXG4gICAgICAgIGNsYXNzPVwidG9nZ2xlLWNoaWxkcmVuLXdyYXBwZXJcIlxuICAgICAgICAoY2xpY2spPVwibm9kZS5tb3VzZUFjdGlvbignZXhwYW5kZXJDbGljaycsICRldmVudClcIj5cblxuICAgICAgICA8c3BhbiBjbGFzcz1cInRvZ2dsZS1jaGlsZHJlblwiPjwvc3Bhbj5cbiAgICAgIDwvc3Bhbj5cbiAgICAgIDxzcGFuXG4gICAgICAgICpuZ0lmPVwiIW5vZGUuaGFzQ2hpbGRyZW5cIlxuICAgICAgICBjbGFzcz1cInRvZ2dsZS1jaGlsZHJlbi1wbGFjZWhvbGRlclwiPlxuICAgICAgPC9zcGFuPlxuICAgIDwvbmctY29udGFpbmVyPlxuICBgXG59LCBdIH0sXG5dO1xuLyoqIEBub2NvbGxhcHNlICovXG5zdGF0aWMgY3RvclBhcmFtZXRlcnM6ICgpID0+ICh7dHlwZTogYW55LCBkZWNvcmF0b3JzPzogRGVjb3JhdG9ySW52b2NhdGlvbltdfXxudWxsKVtdID0gKCkgPT4gW1xue3R5cGU6IEVsZW1lbnRSZWYsIH0sXG5dO1xuc3RhdGljIHByb3BEZWNvcmF0b3JzOiB7W2tleTogc3RyaW5nXTogRGVjb3JhdG9ySW52b2NhdGlvbltdfSA9IHtcbidub2RlJzogW3sgdHlwZTogSW5wdXQgfSxdLFxufTtcbn1cblxuaW50ZXJmYWNlIERlY29yYXRvckludm9jYXRpb24ge1xuICB0eXBlOiBGdW5jdGlvbjtcbiAgYXJncz86IGFueVtdO1xufVxuIl19
